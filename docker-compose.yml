version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d            # Configuración de Nginx
      - ./frontend:/usr/share/nginx/html      # Archivos de frontend de Angular
      - ./backend:/var/www                   # Código del Backend Laravel
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile-backend
    container_name: backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=sqlsrv
      - DB_HOST=db
      - DB_PORT=1433
      - DB_DATABASE=tall
      - DB_USERNAME=sa
      - DB_PASSWORD=P@ssw0rd13579
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile-frontend
    container_name: frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./frontend:/app
    command: >
      sh -c "npm install && npm run build -- --prod"
    networks:
      - app-network

  db:
    image: rapidfort/microsoft-sql-server-2019-ib:latest
    container_name: sqlserver
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=P@ssw0rd13579
    ports:
      - "1433:1433"
    networks:
      - app-network

networks:
  app-network:

